//Matriz.h

#pragma once
class Matriz
{
private:
	int M[10][10];
	int m, n;
public:
	Matriz(int _n, int _m);
	~Matriz(void);
	void cargarmat();
	void mostrarmat();
	void devolvermat(int _M[10][10]);
	void sumarmat(int _M1[10][10], int _M2[10][10]);
	void transpuesta(int _M1[10][10]);
};


//Matriz.cpp

#include "StdAfx.h"
#include "Matriz.h"
#include <iostream>

using namespace std;

Matriz::Matriz(int _n, int _m)
{
	m=_m;
	n=_n;
}


Matriz::~Matriz(void)
{
}

void Matriz::cargarmat()
{
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
		{
			cout<<"Ingresa M["<<i<<"]["<<j<<"]= ";
			cin>>M[i][j];
		}
		cout<<endl;
}

void Matriz::mostrarmat()
{
	for(int i=0; i<n; i++){
		for(int j=0; j<m; j++)
		{
			cout<<" M["<<i<<"]["<<j<<"]=";
			cout<<M[i][j];
		}
		cout<<endl;
	}
	cout<<endl;
}

void Matriz::devolvermat(int _M[10][10])
{
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
		{
			_M[i][j]=M[i][j];
		}
}

void Matriz::sumarmat(int _M1[10][10],int _M2[10][10])
{
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
		{
			M[i][j]= _M1[i][j]+_M2[i][j];
		}
}

void Matriz::transpuesta(int _M1[10][10])
{
	int aux;
	 for (int i=0;i<n;i++)
        for (int j=0;j<m;j++)
		M[j][i]=_M1[i][j];
aux=m;
m=n;
n=aux;
}

//EjemploMat.cpp

#include "StdAfx.h"
#include "Matriz.h"
#include "iostream"
#include "conio.h"
using namespace std;

void main()
{
    int nrow,ncol,mat1[10][10],mat2[10][10],opc;
    do{
        cout<<"ingrese num fil: ";
        cin>>nrow;
    }while(nrow<0||nrow>10);

    do{
        cout<<"ingrese num col: ";
        cin>>ncol;
    }while(ncol<0||ncol>10);
	Matriz m1(nrow,ncol);
	do{
	 cout<<endl<<endl<<"------------------------------MENU---------------------------";
	 cout<<endl<<endl<<"1.-Cargar.";
	 cout<<endl<<"2.-Mostrar.";
	 cout<<endl<<"3.-Matriz transpuesta.";
	 cout<<endl<<"4.-Suma de matrices.";
	 cout<<endl<<"0.Salir";
	 cout<<endl<<endl<<"Seleccione su opcion";
	 cin>>opc;
	 switch(opc)
	 {
	 case 1:
		m1.cargarmat();
		 break;
	 case 2:
		m1.mostrarmat();
		 break;
	 case 3:
		 m1.devolvermat(mat1);
		 m1.transpuesta(mat1);
		 break;
	 case 4:
		 break;
	 }
	}while(opc!=0);
    getch();

}
